#!/bin/bash

########################
## set proxy helper
## 'p on 8080'
## install use 
## curl 'https://raw.githubusercontent.com/JonasGao/my-configs/master/terminal/bin/p' -o p && chmod 700 p

show() {
  echo "HTTP  = $HTTP_PROXY"
  echo "HTTPS = $HTTPS_PROXY"
  echo "ALL   = $ALL_PROXY"
}

show-help() {
  printf """
. p -ersnhot

-e enable cli env
-s enable system env
-n unset sys
-r unset cli
-h host
-o socks-port 
-t http-port

"""
}

main() {
  local HOST="127.0.0.1"
  local DO_SET
  local DO_UNSET
  local HTTP_PORT
  local SOCKS_PORT
  
  while getopts 'ers:n:h:o:t:' opt; do
    case ${opt} in
      e)
        local DO_SET=1
        ;;
      r)
        local DO_UNSET=1
        ;;
      t)
        local HTTP_PORT=${OPTARG}
        ;;
      h)
        local HOST=${OPTARG}
        ;;
      o)
        local SOCKS_PORT=${OPTARG}
        ;;
      s)
        local DO_SYS=${OPTARG}
        ;;
      n)
        local UNDO_SYS=${OPTARG}
        ;;
      *)
        local HELP=1
        ;;
    esac
  done

  if [ "${HELP}" = 1 ]; then
    show-help
    return 0
  fi

  # ========== CLI ENV ==========
 
  if [ "${DO_SET}" = 1 ] && [ "${DO_UNSET}" = 1 ]; then
    echo "You can't set and cancel at the same time!"
    return 1
  fi
  
  if [ "${DO_SET}" = 1 ]; then
    if [ "${HTTP_PORT}" != "" ] && [ "${SOCKS_PORT}" != "" ]; then
      echo "Can only select one, 'http' or 'socks'"
      return 2
    fi
    if [ "${HTTP_PORT}" != "" ]; then
      export HTTP_PROXY="http://$HOST:${HTTP_PORT}"
      export HTTPS_PROXY="http://$HOST:${HTTP_PORT}"
      export ALL_PROXY="http://$HOST:${HTTP_PORT}"
    fi
    if [ "${SOCKS_PORT}" != "" ]; then
      export HTTP_PROXY="socks5://$HOST:${SOCKS_PORT}"
      export HTTPS_PROXY="socks5://$HOST:${SOCKS_PORT}"
      export ALL_PROXY="socks5://$HOST:${SOCKS_PORT}"
    fi
  fi
  
  if [ "${DO_UNSET}" = 1 ]; then
    unset HTTP_PROXY
    unset HTTPS_PROXY
    unset ALL_PROXY
    echo "unset PROXY"
  fi

  # ========== CLI ENV ==========

  if [ "${DO_SYS}" != "" ]; then
    # TODO check networksetup
    if [ "${HTTP_PORT}" != "" ]; then
      networksetup -setwebproxy ${DO_SYS} ${HOST} ${HTTP_PORT}
      # networksetup -setwebproxystate ${DO_SYS} on
      networksetup -setsecurewebproxy ${DO_SYS} ${HOST} ${HTTP_PORT} 
      # networksetup -setsecurewebproxystate ${DO_SYS} on
      echo "setup sys [${DO_SYS}] http(s) proxy"
      echo "======================="
      networksetup -getwebproxy ${DO_SYS}
      echo "-----------------------"
      networksetup -getsecurewebproxy ${DO_SYS}
      echo "======================="
    fi
    if [ "${SOCKS_PORT}" != "" ]; then
      networksetup -setsocksfirewallproxy ${DO_SYS} ${HOST} ${SOCKS_PORT}
      # networksetup -setsocksfirewallproxystate ${DO_SYS} on
      echo "setup sys [${DO_SYS}] socks proxy"
      echo "======================="
      networksetup -getsocksfirewallproxy ${DO_SYS}
      echo "======================="
    fi
  fi
  
  if [ "${UNDO_SYS}" != "" ]; then
    networksetup -setwebproxystate ${UNDO_SYS} off
    networksetup -setsecurewebproxystate ${UNDO_SYS} off
    networksetup -setsocksfirewallproxystate ${UNDO_SYS} off
    echo "Off all sys proxy"
  fi
}

main $@
show
